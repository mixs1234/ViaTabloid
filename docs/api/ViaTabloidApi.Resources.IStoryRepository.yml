### YamlMime:ManagedReference
items:
- uid: ViaTabloidApi.Resources.IStoryRepository
  commentId: T:ViaTabloidApi.Resources.IStoryRepository
  id: IStoryRepository
  parent: ViaTabloidApi.Resources
  children:
  - ViaTabloidApi.Resources.IStoryRepository.AddAsync(Story)
  - ViaTabloidApi.Resources.IStoryRepository.DeleteAsync(System.Int32)
  - ViaTabloidApi.Resources.IStoryRepository.GetAllAsync
  - ViaTabloidApi.Resources.IStoryRepository.GetByIdAsync(System.Int32)
  - ViaTabloidApi.Resources.IStoryRepository.UpdateAsync(Story)
  langs:
  - csharp
  - vb
  name: IStoryRepository
  nameWithType: IStoryRepository
  fullName: ViaTabloidApi.Resources.IStoryRepository
  type: Interface
  source:
    remote:
      path: backend/ViaTabloidApi/Resources/IStoryRepository.cs
      branch: main
      repo: https://github.com/mixs1234/ViaTabloid.git
    id: IStoryRepository
    path: ../backend/ViaTabloidApi/Resources/IStoryRepository.cs
    startLine: 6
  assemblies:
  - ViaTabloidApi
  namespace: ViaTabloidApi.Resources
  summary: Represents a repository interface for managing stories.
  example: []
  syntax:
    content: public interface IStoryRepository
    content.vb: Public Interface IStoryRepository
- uid: ViaTabloidApi.Resources.IStoryRepository.GetAllAsync
  commentId: M:ViaTabloidApi.Resources.IStoryRepository.GetAllAsync
  id: GetAllAsync
  parent: ViaTabloidApi.Resources.IStoryRepository
  langs:
  - csharp
  - vb
  name: GetAllAsync()
  nameWithType: IStoryRepository.GetAllAsync()
  fullName: ViaTabloidApi.Resources.IStoryRepository.GetAllAsync()
  type: Method
  source:
    remote:
      path: backend/ViaTabloidApi/Resources/IStoryRepository.cs
      branch: main
      repo: https://github.com/mixs1234/ViaTabloid.git
    id: GetAllAsync
    path: ../backend/ViaTabloidApi/Resources/IStoryRepository.cs
    startLine: 12
  assemblies:
  - ViaTabloidApi
  namespace: ViaTabloidApi.Resources
  summary: Retrieves all stories asynchronously.
  example: []
  syntax:
    content: Task<IEnumerable<Story>> GetAllAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Story}}
      description: A task that represents the asynchronous operation. The task result contains an enumerable collection of stories.
    content.vb: Function GetAllAsync() As Task(Of IEnumerable(Of Story))
  overload: ViaTabloidApi.Resources.IStoryRepository.GetAllAsync*
- uid: ViaTabloidApi.Resources.IStoryRepository.GetByIdAsync(System.Int32)
  commentId: M:ViaTabloidApi.Resources.IStoryRepository.GetByIdAsync(System.Int32)
  id: GetByIdAsync(System.Int32)
  parent: ViaTabloidApi.Resources.IStoryRepository
  langs:
  - csharp
  - vb
  name: GetByIdAsync(int)
  nameWithType: IStoryRepository.GetByIdAsync(int)
  fullName: ViaTabloidApi.Resources.IStoryRepository.GetByIdAsync(int)
  type: Method
  source:
    remote:
      path: backend/ViaTabloidApi/Resources/IStoryRepository.cs
      branch: main
      repo: https://github.com/mixs1234/ViaTabloid.git
    id: GetByIdAsync
    path: ../backend/ViaTabloidApi/Resources/IStoryRepository.cs
    startLine: 19
  assemblies:
  - ViaTabloidApi
  namespace: ViaTabloidApi.Resources
  summary: Retrieves a story by its unique identifier asynchronously.
  example: []
  syntax:
    content: Task<Story> GetByIdAsync(int id)
    parameters:
    - id: id
      type: System.Int32
      description: The unique identifier of the story.
    return:
      type: System.Threading.Tasks.Task{Story}
      description: A task that represents the asynchronous operation. The task result contains the story with the specified identifier.
    content.vb: Function GetByIdAsync(id As Integer) As Task(Of Story)
  overload: ViaTabloidApi.Resources.IStoryRepository.GetByIdAsync*
  nameWithType.vb: IStoryRepository.GetByIdAsync(Integer)
  fullName.vb: ViaTabloidApi.Resources.IStoryRepository.GetByIdAsync(Integer)
  name.vb: GetByIdAsync(Integer)
- uid: ViaTabloidApi.Resources.IStoryRepository.AddAsync(Story)
  commentId: M:ViaTabloidApi.Resources.IStoryRepository.AddAsync(Story)
  id: AddAsync(Story)
  parent: ViaTabloidApi.Resources.IStoryRepository
  langs:
  - csharp
  - vb
  name: AddAsync(Story)
  nameWithType: IStoryRepository.AddAsync(Story)
  fullName: ViaTabloidApi.Resources.IStoryRepository.AddAsync(Story)
  type: Method
  source:
    remote:
      path: backend/ViaTabloidApi/Resources/IStoryRepository.cs
      branch: main
      repo: https://github.com/mixs1234/ViaTabloid.git
    id: AddAsync
    path: ../backend/ViaTabloidApi/Resources/IStoryRepository.cs
    startLine: 27
  assemblies:
  - ViaTabloidApi
  namespace: ViaTabloidApi.Resources
  summary: Adds a new story asynchronously.
  remarks: The task result contains the story with its unique identifier populated.
  example: []
  syntax:
    content: Task<Story> AddAsync(Story story)
    parameters:
    - id: story
      type: Story
      description: The story to add.
    return:
      type: System.Threading.Tasks.Task{Story}
      description: A task that represents the asynchronous operation.
    content.vb: Function AddAsync(story As Story) As Task(Of Story)
  overload: ViaTabloidApi.Resources.IStoryRepository.AddAsync*
- uid: ViaTabloidApi.Resources.IStoryRepository.UpdateAsync(Story)
  commentId: M:ViaTabloidApi.Resources.IStoryRepository.UpdateAsync(Story)
  id: UpdateAsync(Story)
  parent: ViaTabloidApi.Resources.IStoryRepository
  langs:
  - csharp
  - vb
  name: UpdateAsync(Story)
  nameWithType: IStoryRepository.UpdateAsync(Story)
  fullName: ViaTabloidApi.Resources.IStoryRepository.UpdateAsync(Story)
  type: Method
  source:
    remote:
      path: backend/ViaTabloidApi/Resources/IStoryRepository.cs
      branch: main
      repo: https://github.com/mixs1234/ViaTabloid.git
    id: UpdateAsync
    path: ../backend/ViaTabloidApi/Resources/IStoryRepository.cs
    startLine: 35
  assemblies:
  - ViaTabloidApi
  namespace: ViaTabloidApi.Resources
  summary: Updates an existing story asynchronously.
  remarks: The task result contains the updated story.
  example: []
  syntax:
    content: Task<Story> UpdateAsync(Story story)
    parameters:
    - id: story
      type: Story
      description: The story to update.
    return:
      type: System.Threading.Tasks.Task{Story}
      description: A task that represents the asynchronous operation.
    content.vb: Function UpdateAsync(story As Story) As Task(Of Story)
  overload: ViaTabloidApi.Resources.IStoryRepository.UpdateAsync*
- uid: ViaTabloidApi.Resources.IStoryRepository.DeleteAsync(System.Int32)
  commentId: M:ViaTabloidApi.Resources.IStoryRepository.DeleteAsync(System.Int32)
  id: DeleteAsync(System.Int32)
  parent: ViaTabloidApi.Resources.IStoryRepository
  langs:
  - csharp
  - vb
  name: DeleteAsync(int)
  nameWithType: IStoryRepository.DeleteAsync(int)
  fullName: ViaTabloidApi.Resources.IStoryRepository.DeleteAsync(int)
  type: Method
  source:
    remote:
      path: backend/ViaTabloidApi/Resources/IStoryRepository.cs
      branch: main
      repo: https://github.com/mixs1234/ViaTabloid.git
    id: DeleteAsync
    path: ../backend/ViaTabloidApi/Resources/IStoryRepository.cs
    startLine: 42
  assemblies:
  - ViaTabloidApi
  namespace: ViaTabloidApi.Resources
  summary: Deletes a story by its unique identifier asynchronously.
  example: []
  syntax:
    content: Task DeleteAsync(int id)
    parameters:
    - id: id
      type: System.Int32
      description: The unique identifier of the story to delete.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Function DeleteAsync(id As Integer) As Task
  overload: ViaTabloidApi.Resources.IStoryRepository.DeleteAsync*
  nameWithType.vb: IStoryRepository.DeleteAsync(Integer)
  fullName.vb: ViaTabloidApi.Resources.IStoryRepository.DeleteAsync(Integer)
  name.vb: DeleteAsync(Integer)
references:
- uid: ViaTabloidApi.Resources
  commentId: N:ViaTabloidApi.Resources
  href: ViaTabloidApi.html
  name: ViaTabloidApi.Resources
  nameWithType: ViaTabloidApi.Resources
  fullName: ViaTabloidApi.Resources
  spec.csharp:
  - uid: ViaTabloidApi
    name: ViaTabloidApi
    href: ViaTabloidApi.html
  - name: .
  - uid: ViaTabloidApi.Resources
    name: Resources
    href: ViaTabloidApi.Resources.html
  spec.vb:
  - uid: ViaTabloidApi
    name: ViaTabloidApi
    href: ViaTabloidApi.html
  - name: .
  - uid: ViaTabloidApi.Resources
    name: Resources
    href: ViaTabloidApi.Resources.html
- uid: ViaTabloidApi.Resources.IStoryRepository.GetAllAsync*
  commentId: Overload:ViaTabloidApi.Resources.IStoryRepository.GetAllAsync
  href: ViaTabloidApi.Resources.IStoryRepository.html#ViaTabloidApi_Resources_IStoryRepository_GetAllAsync
  name: GetAllAsync
  nameWithType: IStoryRepository.GetAllAsync
  fullName: ViaTabloidApi.Resources.IStoryRepository.GetAllAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Story}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{Story}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<Story>>
  nameWithType: Task<IEnumerable<Story>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<Story>>
  nameWithType.vb: Task(Of IEnumerable(Of Story))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of Story))
  name.vb: Task(Of IEnumerable(Of Story))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Story
    name: Story
    href: Story.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Story
    name: Story
    href: Story.html
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: ViaTabloidApi.Resources.IStoryRepository.GetByIdAsync*
  commentId: Overload:ViaTabloidApi.Resources.IStoryRepository.GetByIdAsync
  href: ViaTabloidApi.Resources.IStoryRepository.html#ViaTabloidApi_Resources_IStoryRepository_GetByIdAsync_System_Int32_
  name: GetByIdAsync
  nameWithType: IStoryRepository.GetByIdAsync
  fullName: ViaTabloidApi.Resources.IStoryRepository.GetByIdAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.Tasks.Task{Story}
  commentId: T:System.Threading.Tasks.Task{Story}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Story>
  nameWithType: Task<Story>
  fullName: System.Threading.Tasks.Task<Story>
  nameWithType.vb: Task(Of Story)
  fullName.vb: System.Threading.Tasks.Task(Of Story)
  name.vb: Task(Of Story)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Story
    name: Story
    href: Story.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Story
    name: Story
    href: Story.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ViaTabloidApi.Resources.IStoryRepository.AddAsync*
  commentId: Overload:ViaTabloidApi.Resources.IStoryRepository.AddAsync
  href: ViaTabloidApi.Resources.IStoryRepository.html#ViaTabloidApi_Resources_IStoryRepository_AddAsync_Story_
  name: AddAsync
  nameWithType: IStoryRepository.AddAsync
  fullName: ViaTabloidApi.Resources.IStoryRepository.AddAsync
- uid: Story
  commentId: T:Story
  href: Story.html
  name: Story
  nameWithType: Story
  fullName: Story
- uid: ViaTabloidApi.Resources.IStoryRepository.UpdateAsync*
  commentId: Overload:ViaTabloidApi.Resources.IStoryRepository.UpdateAsync
  href: ViaTabloidApi.Resources.IStoryRepository.html#ViaTabloidApi_Resources_IStoryRepository_UpdateAsync_Story_
  name: UpdateAsync
  nameWithType: IStoryRepository.UpdateAsync
  fullName: ViaTabloidApi.Resources.IStoryRepository.UpdateAsync
- uid: ViaTabloidApi.Resources.IStoryRepository.DeleteAsync*
  commentId: Overload:ViaTabloidApi.Resources.IStoryRepository.DeleteAsync
  href: ViaTabloidApi.Resources.IStoryRepository.html#ViaTabloidApi_Resources_IStoryRepository_DeleteAsync_System_Int32_
  name: DeleteAsync
  nameWithType: IStoryRepository.DeleteAsync
  fullName: ViaTabloidApi.Resources.IStoryRepository.DeleteAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
